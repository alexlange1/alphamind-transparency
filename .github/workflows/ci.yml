name: CI

on:
  push:
  pull_request:

jobs:
  python-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r subnet/requirements.txt
      - name: Run pytest
        run: |
          python -m pytest -q

  foundry-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Foundry
        run: |
          curl -L https://foundry.paradigm.xyz | bash
          echo "$HOME/.foundry/bin" >> $GITHUB_PATH
          ~/.foundry/bin/foundryup
      - name: Forge version
        run: forge --version
      - name: Run forge tests
        working-directory: contracts
        run: forge test -q

  e2e-anvil:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Foundry
        run: |
          curl -L https://foundry.paradigm.xyz | bash
          echo "$HOME/.foundry/bin" >> $GITHUB_PATH
          ~/.foundry/bin/foundryup
      - name: Start anvil
        run: nohup anvil --port 8545 --chain-id 31337 --silent &
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r subnet/requirements.txt
      - name: Deploy registry and validator set
        run: |
          REG=$(forge create contracts/src/WeightsetRegistry.sol:WeightsetRegistry --rpc-url http://127.0.0.1:8545 --private-key 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 --json | jq -r .deployedTo)
          VS=$(forge create contracts/src/ValidatorSet.sol:ValidatorSet --constructor-args 0x0000000000000000000000000000000000000001 --rpc-url http://127.0.0.1:8545 --private-key 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 --json | jq -r .deployedTo)
          echo "REG=$REG" >> $GITHUB_ENV
          echo "VS=$VS" >> $GITHUB_ENV
          cast send $VS "setRegistry(address)" $REG --rpc-url http://127.0.0.1:8545 --private-key 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
      - name: Run validator API and publish
        env:
          AM_OUT_DIR: ${{ github.workspace }}/subnet/out
          AM_API_TOKEN: dev
          AM_CHAIN: '1'
          AM_RPC_URL: http://127.0.0.1:8545
          AM_CHAIN_PRIVKEY: 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
          AM_REGISTRY_ADDR: ${{ env.REG }}
          AM_VALIDATORSET_ADDR: ${{ env.VS }}
        run: |
          python -m subnet.miner.loop --emit-emissions-once || true
          python -m subnet.miner.loop --emit-prices-once || true
          nohup uvicorn subnet.validator.api:app --host 127.0.0.1 --port 8000 &
          sleep 2
          curl -s -X POST -H 'Authorization: Bearer dev' -H 'content-type: application/json' \
            -d '{"in_dir":"'"$AM_OUT_DIR"'","out_file":"'"$AM_OUT_DIR"'/weights.json","top_n":20}' \
            http://127.0.0.1:8000/aggregate | cat
          curl -s http://127.0.0.1:8000/weightset-publish | tee /tmp/manifest.json
      - name: Upload manifest
        uses: actions/upload-artifact@v4
        with:
          name: weightset-manifest
          path: /tmp/manifest.json

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build validator image
        run: |
          docker build -f subnet/validator/Dockerfile -t alphamind-validator:ci .

name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}-py311
      - name: Install linters
        run: pip install ruff
      - name: Ruff
        run: ruff check subnet tests

  test:
    needs: [lint]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python: [ '3.10', '3.11' ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}-py${{ matrix.python }}
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r subnet/requirements.txt
          pip install pytest
      - name: Pytest
        run: pytest -q

  smoke:
    name: Smoke (aggregate→publish→proof)
    needs: [test]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      AM_OUT_DIR: ${{ github.workspace }}/subnet/out
      AM_IN_DIR:  ${{ github.workspace }}/subnet/out
      AM_PUBLISH_MODE: local
      AM_PUBLISH_DIR: ${{ github.workspace }}/published
      AM_REQUIRE_PUBLISH: 1
      AM_REQUIRE_SIGNING: 0
      AM_API_TOKEN: ci
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}-py311
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r subnet/requirements.txt
          sudo apt-get update && sudo apt-get install -y jq
      - name: Start API
        run: |
          nohup uvicorn subnet.validator.api:app --host 127.0.0.1 --port 8000 &
          sleep 3
      - name: Aggregate once
        run: |
          curl -s -X POST -H 'content-type: application/json' -H 'Authorization: Bearer ci' \
            -d '{"in_dir":"'"$GITHUB_WORKSPACE"/subnet/out'" ,"out_file":"'"$GITHUB_WORKSPACE"/subnet/out/weights.json'" ,"top_n":20}' \
            http://127.0.0.1:8000/aggregate | jq .
      - name: Publish + verify
        run: |
          curl -s http://127.0.0.1:8000/weightset-publish | tee publish.json | jq .
          test $(jq -r '.status' publish.json) != "error"
          curl -s http://127.0.0.1:8000/weightset | jq -c > ws.json
          sha=$(sha256sum ws.json | awk '{print $1}')
          echo "sha256(ws.json)=$sha"
          curl -s http://127.0.0.1:8000/weightset-sha | grep "$sha"
          curl -s http://127.0.0.1:8000/weightset-proof | jq .
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: weightset-artifacts
          path: |
            subnet/out/weightset_epoch_*.*json
            subnet/out/weightset_epoch_*.sha256
            subnet/out/weightset_epoch_*.sig
            published/**

  build:
    needs: [smoke]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build validator image (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: subnet/validator/Dockerfile
          push: false


